/*
 * This file is generated by jOOQ.
 */
package com.baga.promon.usermanagement.generated.tables.records;


import com.baga.promon.usermanagement.generated.tables.UserEntity;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEntityRecord extends UpdatableRecordImpl<UserEntityRecord> implements Record5<BigDecimal, String, String, LocalDateTime, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_entity.id</code>.
     */
    public void setId(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_entity.id</code>.
     */
    public BigDecimal getId() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>public.user_entity.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_entity.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_entity.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_entity.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_entity.last_login</code>.
     */
    public void setLastLogin(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_entity.last_login</code>.
     */
    public LocalDateTime getLastLogin() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.user_entity.employee_id</code>.
     */
    public void setEmployeeId(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_entity.employee_id</code>.
     */
    public BigDecimal getEmployeeId() {
        return (BigDecimal) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<BigDecimal> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<BigDecimal, String, String, LocalDateTime, BigDecimal> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<BigDecimal, String, String, LocalDateTime, BigDecimal> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return UserEntity.USER_ENTITY.ID;
    }

    @Override
    public Field<String> field2() {
        return UserEntity.USER_ENTITY.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return UserEntity.USER_ENTITY.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UserEntity.USER_ENTITY.LAST_LOGIN;
    }

    @Override
    public Field<BigDecimal> field5() {
        return UserEntity.USER_ENTITY.EMPLOYEE_ID;
    }

    @Override
    public BigDecimal component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public LocalDateTime component4() {
        return getLastLogin();
    }

    @Override
    public BigDecimal component5() {
        return getEmployeeId();
    }

    @Override
    public BigDecimal value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public LocalDateTime value4() {
        return getLastLogin();
    }

    @Override
    public BigDecimal value5() {
        return getEmployeeId();
    }

    @Override
    public UserEntityRecord value1(BigDecimal value) {
        setId(value);
        return this;
    }

    @Override
    public UserEntityRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserEntityRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserEntityRecord value4(LocalDateTime value) {
        setLastLogin(value);
        return this;
    }

    @Override
    public UserEntityRecord value5(BigDecimal value) {
        setEmployeeId(value);
        return this;
    }

    @Override
    public UserEntityRecord values(BigDecimal value1, String value2, String value3, LocalDateTime value4, BigDecimal value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserEntityRecord
     */
    public UserEntityRecord() {
        super(UserEntity.USER_ENTITY);
    }

    /**
     * Create a detached, initialised UserEntityRecord
     */
    public UserEntityRecord(BigDecimal id, String username, String password, LocalDateTime lastLogin, BigDecimal employeeId) {
        super(UserEntity.USER_ENTITY);

        setId(id);
        setUsername(username);
        setPassword(password);
        setLastLogin(lastLogin);
        setEmployeeId(employeeId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserEntityRecord
     */
    public UserEntityRecord(com.baga.promon.usermanagement.generated.tables.pojos.UserEntity value) {
        super(UserEntity.USER_ENTITY);

        if (value != null) {
            setId(value.getId());
            setUsername(value.getUsername());
            setPassword(value.getPassword());
            setLastLogin(value.getLastLogin());
            setEmployeeId(value.getEmployeeId());
            resetChangedOnNotNull();
        }
    }
}
